[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "CCSTwin",
    "section": "",
    "text": "Summary\nThis is an outline of what I see as problems with our current model, and some alternative approaches.\nI think we would be able to give more comprehensive answers if to questions about pipe networks if we model pipe segments as systems of partial differential equations. Particularly when it comes to designing a network, you want to be able to model segments separately without knowing the valid network configurations in advance."
  },
  {
    "objectID": "whatif.html",
    "href": "whatif.html",
    "title": "1  What if?",
    "section": "",
    "text": "What-if modelling is the evaluation of the network given certain inputs and constraints.\nIt is not the same as solving the network. The forward pass in our search loops could be considered what-if modelling because in that forward pass we’re asking what happens at the outlet if the inlet pressure is X but the output of the model isn’t the answer to that question.\nEvaluating f(x) = x^2 - 16 would look like f(x)\\vert_{x=5} = 9 whereas solving it might look like \nx^2 - 16 = 0 \\\\\n(x - 4)(x + 4) = 0 \\\\\nx = 4, x = -4\n\nWhat we’re making is closer to an algorithm for solving an equation using a particular method than it is to a function that can be evaluated with any inputs. And the method doesn’t work if certain assumptions aren’t true. And we make no attempt to validate those assumptions."
  },
  {
    "objectID": "components.html#wells-and-perforations",
    "href": "components.html#wells-and-perforations",
    "title": "2  Components",
    "section": "2.1 Wells and perforations",
    "text": "2.1 Wells and perforations\nThe analogue functions are designed to imitate the behaviour of wells and perforations by taking data about their inputs and outputs and fitting a curve to those data points. We trust the functions to cover the range we were provided data for, but nothing beyond that.\nThe data points are all from previous flow assurance cases, so they cover the expected operating range, but we have little if any data points for the extremes of our input space. Our search algorithms are not constrained to only cover the expected operating range."
  },
  {
    "objectID": "components.html#splitters",
    "href": "components.html#splitters",
    "title": "2  Components",
    "section": "2.2 Splitters",
    "text": "2.2 Splitters\nThe flowrate search in the splitter relies on the assumption that the relationship between the flowrate in a branch and the outlet pressure is injective. If any two flowrates produce the same outlet pressure then we can’t use a binary search to explore the range of outputs.\nBy testing a range of flowrates for a particular branch, we found a case where the outlet pressure at 2 kgps was higher than both 1 kgps and 3 kgps. This may be extremely low, but it’s within our search domain so it’s a number our search could potentially settle on."
  },
  {
    "objectID": "components.html#inlet-pressure-search",
    "href": "components.html#inlet-pressure-search",
    "title": "2  Components",
    "section": "2.3 Inlet pressure search",
    "text": "2.3 Inlet pressure search\nThis also relies on the assumption that the relationship between the input and output is injective. It’s the same kind of search, but just changing a different variable. It’s possible that a higher inlet pressure does always produce a higher outlet pressure but nobody has demonstrated that.\n\n\n\n\n\n\nImportant\n\n\n\nIf we set the domain of the search to > 2 kgps, that doesn’t solve our problem in general. The peak of the curve is a product of the shape and conditions of the network. If the pipe lengths, heights, diameters, U values, ambient temperatures, roughnesses, etc. were different, the peak probably would be too. By how much and in what direction? We don’t know.\nDemonstrating that we have a particular relationship between our input and output variables for one section of one configuration of one network doesn’t prove the general case. But if we didn’t happen to come across an example of the problem, we wouldn’t even be considering changing our search domain."
  },
  {
    "objectID": "solving.html#discontinuity-points",
    "href": "solving.html#discontinuity-points",
    "title": "3  Solving",
    "section": "3.1 Discontinuity points",
    "text": "3.1 Discontinuity points\n\n\nTable 3.1: Components where discontinuities occur\n\n\n\n\n\n\n\n\n\nPressure\nTemperature\nFlowrate\n\n\n\n\nInlet\nUnknown\nDepends1\nKnown\n\n\nValve\nUnknown\nKnown\nKnown\n\n\nCompressor\nDepends2\nUnknown\nKnown\n\n\nSplitter\nKnown\nKnown\nUnknown\n\n\nHeater\nKnown\nDepends3\nKnown\n\n\nCooler\nKnown\nDepends\nKnown\n\n\n\n\nAt an inlet, we want to know if there are any solutions with a fluid pressure below our maximum. At a valve, we ask “are there valid solutions with a fluid pressure above X at this point?” Depending on how compressors, heaters, and coolers are defined, we might ask whether a pressure/temperature increase to or by a certain amount at this point produces a valid solution.\nYou can produce direct answers to these with a good pipe segment model. If you were to change the set point of a valve, you wouldn’t need to run all your simulations for the entire network again.\nIt seems like everything you would want to know about the component specific properties of these is external to the network snapshot. If you want to inspect the power consumption of a compressor train, that can be done by processing the results of a simulation, but it doesn’t actually affect the results. It’s just a way of formatting the output. If you were to calculate that it required a certain amount of power to heat your house, you could use that number to calculate the cost of different types of heaters, but the choice of heater doesn’t affect the initial power calculation."
  },
  {
    "objectID": "solving.html#stability-and-robustness",
    "href": "solving.html#stability-and-robustness",
    "title": "3  Solving",
    "section": "3.2 Stability and robustness",
    "text": "3.2 Stability and robustness\nBy running snapshots, we can see if our inputs produce a valid output. Not much else. We can’t see the boundaries of our valid input region (and it is a region rather than a point because we have tolerances on the outlet pressures). We can’t, without manual exploration, identify what parts within our valid input region are most stable. We don’t know if a straight line between two valid points is always entirely contained in the valid region.\nThe valid region will move in a life of field simulation as the reservoir pressures increase, but because we’re doing binary searches, there is no guarantee that the solution point we land on will move at the same rate as the region of valid inputs. We may jump from one side to the other, skipping over an invalid region in the middle if there happens to be one.\nAll we can say is that a path exists at the checked intervals from A to B but we can’t say how wide it is, whether it’s continuous or how long it’ll last. We don’t know if other paths exist or if ours is optimal."
  },
  {
    "objectID": "fluidproperties.html#cpa",
    "href": "fluidproperties.html#cpa",
    "title": "4  Fluid properties",
    "section": "4.1 CPA",
    "text": "4.1 CPA\nThe CPA equation of state presented by Kontogeorgis et al. [19], [20] combines the physical term from the cubic Soave–Redlich–Kwong (SRK) EoS with an association term similar to that found in the statistical associating fluid theory (SAFT) models.\n\n4.1.1 Pressure explicit form\nOn pressure explicit form, the CPA EoS may be expressed:\n\nP = \\frac{R \\cdot T}{V_m - b} - \\frac{\\alpha(T)}{V_m \\cdot (V_m + b)} - \\frac{R \\cdot T}{2 \\cdot V_m} \\\\ \\cdot \\left[ 1 + \\frac{1}{V_m} \\cdot \\frac{\\partial \\ln g}{\\partial (1/V_m)} \\right] \\times \\sum_i x_i \\sum_{A_i} (1 - X_{A_i})\n\\tag{4.1}\nwhere R is the gas constant and T is temperature. V_m denotes the molar volume, \\alpha(T) is the temperature dependent SRK energy parameter and b is the SRK co-volume parameter. g is the hard sphere radial distribution function. A_i denotes association site A on component i. x_i is the mole fraction of component i, X_{A_i} is the fraction of sites, type A on component i not bonded to other sites. CPA simplifies to the SRK EoS for non-associating systems.\nThe fraction of non-bonded sites, X_{A_i} is estimated by solving Eq 4.2 and Eq 4.3.\n\nX_{A_i} = \\left[ 1 + V_m ^{-1} \\cdot \\sum_j x_j \\sum_{B_j} X_{B_j} \\cdot \\Delta^{A_iB_j} \\right]\n\\tag{4.2}\nEq 4.2 is evaluated for all site types on all associating components. The summation over B_j in Eq 4.2 indicates summation over all association sites.\n\\Delta^{A_iB_j} is the association strength between site A on molecule i and site B on molecule j. It is given by\n\n\\Delta^{A_iB_j} = g(V_m)^{ref} \\cdot [\\exp(\\epsilon^{A_iB_j} \\cdot (R \\cdot T)^{-1}) - 1] \\cdot b_{ij} \\cdot \\beta^{A_iB_j}\n\\tag{4.3}\n\\epsilon^{A_iB_j} and \\beta^{A_iB_j} are the association energy and volume, respectively between site A on molecule i and site B on molecule j. g(V_m)^{ref} is the contact value of the radial distribution function for the reference hard sphere fluid system was presented in a simplified form by Kontogeorgis et al. (sCPA [21]). Whereas earlier versions of CPA utilised the Carnahan–Starling expression for the hard-sphere radial distribution function, sCPA uses the expression shown in Eq 4.4 for the simplified hard-sphere radial distribution function.\n\ng(V_m) = \\left[1 - 1.9 \\cdot b \\cdot (4 \\cdot V_m)^{-1}\\right]^{-1}\n\\tag{4.4}\nThe temperature-dependent energy parameter, \\alpha_i(T) for pure component i, in the SRK term is calculated by means of Eq 4.5.\n\n\\alpha_i(T) = a_{0,i} \\cdot \\left[ 1 + c_{1,i} \\cdot \\left( 1 - \\sqrt{T \\cdot T_{c,i}^{-1}} \\right) \\right]^2\n\\tag{4.5}\nwhere a_{0,i} and c_{1,i} are pure component parameters and T_{c,i} is the critical temperature for component i. For associating components, the CPA EoS utilises five pure component parameters, a_{0,i}, b_i, c_{1,i}, \\epsilon^{A_iB_i} and \\beta^{A_iB_i}. Non-associating components are described by three pure component parameters, a_{0,i}, b_i, c_{1,i}, in a manner similar to that of the “standard” SRK EoS. Pure component parameters for associating components are obtained by fitting the model to experimental vapour pressures and saturated liquid densities of the pure component. The three pure component parameters for non-associating compounds may also be obtained from critical temperature, T_{c,i}, critical pressure, P_{c,i}, and the acentric factor \\omega_i.\nIn binary systems, the van der Waals one-fluid mixing rules are used for evaluating the SRK parameters, \\alpha(T) and b. This is done according to Eq 4.6.\n\n\\alpha(T) = \\sum_i \\sum_j x_i \\cdot x_j \\cdot \\alpha_{ij}(T)\n\\tag{4.6}\n\nb = \\sum_i x_i \\cdot b_i\n\\tag{4.7}\nwhere the “classical” combining rules are applied for the binary \\alpha_{ij}(T) in the SRK term and the binary b_{ij} in the association term.\n\n\\alpha_{ij}(T) = \\sqrt{\\alpha_i(T) \\cdot \\alpha_j(T)} \\cdot (1 - k_{ij})\n\\tag{4.8}\n\nb_{ij} = (b_i + b_j) \\cdot 2^{-1}\n\\tag{4.9}\nk_{ij} in Eq 4.8 is the binary interaction parameter (BIP) between component i and component j. k_{ij} may be temperature-dependent, e.g. according to the equation k_{ij} = a_{kij} + b_{kij} / T. No mixing rules are needed for the association parameters for CPA. Only for cross associating systems, combining rules must be applied to the two association parameters \\epsilon^{A_iB_j} and \\beta^{A_iB_j}.\n\n\n4.1.2 Combining rules\n\n\\epsilon^{A_iB_j} = (\\epsilon^{A_iB_i} + \\epsilon^{A_jB_j}) \\cdot 2^{-1}\n\\tag{4.10}\n\n\\beta^{A_iB_j} = \\sqrt{\\beta^{A_iB_i} \\cdot \\beta^{A_jB_j}} + \\gamma^{A_iB_j}\n\\tag{4.11}\nThe combining rule for \\beta^{A_iB_j}, Eq 4.11, has been written in a general form, which handles both cross-association between two self-associating molecules as well as cross-association between one self-associating and one non self-associating molecule (solvation). In the case of cross-association between two self-associating molecules, \\gamma^{A_iB_j} may either be set to zero, in order to allow model prediction according to the standard CR1 combining rule, or it can be used as a handle on the deviation of the cross association interactions from the arithmetic mean. In cases with cross-association involving one non self-associating molecule, \\gamma^{A_iB_j} is needed to provide cross association interactions. For systems containing three or more components sCPA becomes predictive, since only binary interactions may be accounted for (directly) in the process of parameter estimation.\n\n4.1.2.1 Parameters\n\n\n\n\n\n\nAssociating component parameters (conventional)\n\n\n\n\n\n\n\nInert component parameters (conventional)\n\n\n\n\n\n\nUsing eqs A.3 and the CPA parameters (a0, bCPA, c1), the “corresponding monomer” parameters can be calculated. This implies that we only need to use the three conventional EoS parameters: the (monomer) critical temperature, pressure, and m-parameters. These parameters are listed in Tables A1 and A2, for associating and inert compounds, respectively. For comparison, the experimental critical temperatures used in CPA are also provided in each table.\n\n\n\n\nAssociating component parameters (CPA)\n\n\n\n\n\n3B Alcohol parameters (CPA)\n\n\n\n\n\nCorrelated binary parameters (CPA)\n\n\n\n\n\n4.1.3 Other properties\nI don’t know how to turn pressure explicit form of CPA into another form that defines other properties. Those that are defined in terms of Helmholtz free energy seem to be more explicit about the other properties.\nHere is a table I found while reading about the Span-Wagner EoS a while ago.\n\n\n\nRelations of thermodynamic properties to Helmholtz"
  },
  {
    "objectID": "fluidproperties.html#pc-saft",
    "href": "fluidproperties.html#pc-saft",
    "title": "4  Fluid properties",
    "section": "4.2 PC-SAFT",
    "text": "4.2 PC-SAFT\n\nPC-SAFT (perturbed chain SAFT) is an equation of state that is based on statistical associating fluid theory (SAFT).\nThe equation of state is organized into terms that account for different types of intermolecular interactions, including terms for\n\nthe hard chain reference\ndispersion\nassociation\npolar interactions\nions\n\nThe equation is most often expressed in terms of the residual Helmholtz energy because all other thermodynamic properties can be easily found by taking the appropriate derivatives of the Helmholtz energy.\n\na = a^{hc} + a^{disp} + a^{assoc} + a^{dipole} + a^{ion}\n\\tag{4.12}\nwhere a is the molar residual Helmholtz energy.\n\n\n\n\n\n\n\nNote\n\n\n\nThe below section is all based on this paper.\nI haven’t looked too deep into this one but I’m listing it because it can be applied to mixed compositions and is defined in terms of Helmholtz free energy.\n\n\nIn 2001, Gross and Sadowski published an extension of their previous work on the application of the perturbation theory of Barker and Henderson [20] for a hard-chain reference fluid [6] wherein the equation of state was extended to real fluids by optimizing the constants of power series to the experimental vapour pressures and vapour, liquid and supercritical densities of n-alkanes. Before tuning the model constants, the pure component parameters for n-alkane compounds had to be obtained. To do this, a LennardJones perturbing potential was assumed by Gross and Sadowski in Eq. 2.11 and Eq. 2.12 and an expression for the average radial distribution function g(r)^{hc} for hard chains suggested by Chiew [17] was used. They determined the power series 𝐼1 and 𝐼2 for Lennard-Jones-like chains in the next step. The three pure compound parameters m, \\sigma and \\epsilon of the n-alkanes were subsequently optimised by fitting the EoS to the vapour pressures and saturate liquid densities of n-alkanes. The coefficients a_{0i}, a_{1i}, a_{2i}, b_{0i}, b_{1i}, and b_{2i} were then adjusted to the vapour pressures and liquid, vapour, and supercritical densities of n-alkanes using the optimised pure compound parameters [6].\nThe final form of the equation of state is expressed as Eq 4.13 which has two contributions to the free Helmholtz energy, hard-chain (or reference fluid) and dispersion contributions.\n\n\\frac{a^{res}}{RT} = \\frac{a_{Hard chain}}{RT} + \\frac{a_{Dispersion}}{RT}\n\\tag{4.13}\nwhere the hard chain contribution to the residual Helmholtz free energy and the dispersion term are calculated using Eq 4.14 to Eq 4.18\n\n\\frac{a_{Hard chain}}{RT} = m \\frac{a_{Hard sphere}}{RT} + \\frac{a_{chain}}{RT}\n\\tag{4.14}\n\n\\frac{a_{chain}}{RT} = \\sum_i x_i (m_i - 1) \\ln g_{ii}^{hs}\n\\tag{4.15}\nIn Eq 4.15, x_i is the component mole fraction, m_i is the segment number of component i and g_{ii}^{hs} is the radial pair distribution function of segments of component i in the hard sphere system. The hard sphere contribution to the Helmholtz free energy and the radial distribution function are given by Eq 4.16 and Eq 4.17 which are calculated using the radial distribution function and compressibility factor of a hard sphere mixture proposed by Boublik [14] and Mansoori et al. [15]\n\n\\frac{a_{hs}}{RT} = \\frac{1}{\\zeta_0} \\left[ \\frac{3 \\zeta_1 \\zeta_2}{(1 - \\zeta_3)} + \\frac{\\zeta_2^3}{\\zeta_3 (1 - \\zeta_3) ^2} + (\\frac{\\zeta_2^3}{\\zeta_3^2} - \\zeta_3) \\ln(1-\\zeta_3) \\right]\n\\tag{4.16}\n\ng_{ij}^{hs} = \\frac{1}{(1 - \\zeta_3)} + \\left( \\frac{d_id_j}{d_i + d_j} \\right) \\frac{3 \\zeta_2}{(1 - \\zeta_3)^2} + \\left( \\frac{d_id_j}{d_i + d_j} \\right)^2 \\frac{2 \\zeta_2^2}{(1 - \\zeta_3)^2}\n\\tag{4.17}\n\n\\zeta_n = \\frac{\\pi}{6} \\rho \\sum_i x_i m_i \\sigma_i^n\n\\tag{4.18}\n\n\\frac{a_{Dispersion}}{RT} = -2 \\pi \\rho I_1(ŋ, \\bar{m})\\overline{m^2 \\epsilon \\sigma^3} - \\pi \\rho \\bar{m} C_1 I_2(ŋ, \\bar{m}) \\overline{m^2 \\epsilon^2 \\sigma^3}\n\\tag{4.19}\nThe van der Waals mixing rules are applies to account for unlike segments interactions in \\overline{m^2 \\epsilon \\sigma^3} and \\overline{m^2 \\epsilon^2 \\sigma^3} abbreviations. I_1 and I_2 expressions are calculated using Eq 4.20 and Eq 4.21\n\nI_1(ŋ, \\bar{m}) = \\sum_{n=1}^6 a_i(m) ŋ^n\n\\tag{4.20}\n\nI_2(ŋ, \\bar{m}) = \\sum_{n=1}^6 b_i(m) ŋ^n\n\\tag{4.21}\n\n\\overline{m^2 \\epsilon \\sigma^3} = \\sum_i \\sum_j x_i x_j m_i m_j (\\frac{\\epsilon_{ij}}{kT}) \\sigma_{ij}^3\n\\tag{4.22}\n\n\\overline{m^2 \\epsilon^2 \\sigma^3} = \\sum_i \\sum_j x_i x_j m_i m_j (\\frac{\\epsilon_{ij}}{kT})^2 \\sigma_{ij}^3\n\\tag{4.23}\n\n\\bar{m} = \\sum_i x_i m_i\n\\tag{4.24}\n\n...\n\n\n4.2.1 Parameters\n\n\n\n\n\n\nCompound parameters for PC-SAFT\n\n\n\n\n \n\n\n\n\n\n4.2.2 Calculation of Second Thermodynamic Derivative Properties\nVilliers et al. [368] applied SAFT, CPA and the sPC-SAFT equation of states to test the ability of these models to predict heat capacities, pressure–volume derivative, pressure–temperature derivative and speed of sound of n-alkanes and 1-acohols.\nIt can be computationally intensive to numerically calculate the derivatives of the necessary terms to reasonable accuracy, so the paper includes analytical expressions for them.\n\n\n\nThermodynamic property derivatives"
  },
  {
    "objectID": "proposal.html#interface",
    "href": "proposal.html#interface",
    "title": "5  Proposal",
    "section": "5.1 Interface",
    "text": "5.1 Interface\nIf we need a web UI, it makes sense to use React and D3."
  },
  {
    "objectID": "proposal.html#model",
    "href": "proposal.html#model",
    "title": "5  Proposal",
    "section": "5.2 Model",
    "text": "5.2 Model\nI would choose Julia for the network model. Its speed is comparable to Rust and it has features and packages that make it well suited for scientific and differentiable programming. When it comes to solving differential equations in particular, there are lots of options. Functions can be written in a way that more closely resembles the maths notation that would be familiar to SMEs."
  },
  {
    "objectID": "proposal.html#risks-and-challenges",
    "href": "proposal.html#risks-and-challenges",
    "title": "5  Proposal",
    "section": "5.3 Risks and challenges",
    "text": "5.3 Risks and challenges\n\nProblem definition and focus: It’s important to understand what we’re doing and what a useful outcome looks like.\nLack of resources and help: It may not always be easy or possible to make progress without input from SMEs who may not always be available. I don’t actually know these techniques myself so I’d be learning as I go.\nNew language: If we use Julia, it may be more difficult for people to get involved in the project if they aren’t familiar with the language. It’s not that hard to pick up though."
  },
  {
    "objectID": "proposal.html#timeline",
    "href": "proposal.html#timeline",
    "title": "5  Proposal",
    "section": "5.4 Timeline",
    "text": "5.4 Timeline\nthe times here don’t mean anything. they are just placeholder values from the Mermaid documentation\n\n\n\n\ngantt\n    dateFormat  YYYY-MM-DD\n    section Model\n    Fluid properties :a1, 2023-04-01, 30d\n    Pipe segment     :after a1  , 20d\n    Sequencing     :after a1  , 20d\n    section User Interface\n    Component definition      :2023-04-12  , 12d\n    Results visualization      : 24d"
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "I’ll come back to this and do proper references later\ncpa\ncpa 2 Phase equilibrium modeling of gas hydrate systems for CO2 capture, page 195\nPhase Equilibria Measurements and Modelling of CO2–Rich Fluids/Brine Systems"
  }
]