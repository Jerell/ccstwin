# Solving {#sec-solving}

We're trying to solve partial differential equations. We're not using either of the two most common methods to do this numerically. If we were to use the [finite difference method](https://en.wikipedia.org/wiki/Finite_difference_method) we could represent our components as matrices and efficiently calculate the output of a component for a range of inputs by multiplying a fluid matrix with a component matrix. If we had a set of equations as described in the [finite element method](https://en.wikipedia.org/wiki/Finite_element_method) we could use [automatic differentiation](https://www.youtube.com/watch?v=vAp6nUMrKYg) to guide our search. I can't really say which of these is the better choice but both seem better than what we're doing now.

Our current model will tell you the state of the network if you enter a solvable set of inputs. But if you only get answers when you enter values that produce a known output then you don't gain anything by running the model.

If you enter an invalid set of inputs, then our output (the final state of the search) is where the model gave up looking for an answer, not what happens when you enter those inputs.

## Discontinuity points

| | Pressure | Temperature | Flowrate |
| - | - | - | - |
| Inlet | Unknown | Depends^[We can determine inlet temperature as a function of pressure] | Known |
| Valve | Unknown | Known | Known |
| Compressor | Depends^[Compressors are not well defined] | Unknown | Known |
| Splitter | Known | Known | Unknown |
| Heater | Known | Depends^[Increase by or to a value?] | Known |
| Cooler | Known | Depends | Known |

: Components where discontinuities occur {#tbl-discontinuities}

At an inlet, we want to know if there are any solutions with a fluid pressure below our maximum. At a valve, we ask "are there valid solutions with a fluid pressure above X at this point?" Depending on how compressors, heaters, and coolers are defined, we might ask whether a pressure/temperature increase to or by a certain amount at this point produces a valid solution.

You can produce direct answers to these with a good pipe segment model. If you were to change the set point of a valve, you wouldn't need to run all your simulations for the entire network again.

It seems like everything you would want to know about the component specific properties of these is external to the network snapshot. If you want to inspect the power consumption of a compressor train, that can be done by processing the results of a simulation, but it doesn't actually affect the results. It's just a way of formatting the output. If you were to calculate it required a certain amount of power to heat your house, you could use that number to calculate the cost of different types of heaters, but the choice of heater doesn't affect the initial power calculation.

## Stability and robustness

By running snapshots we can see if our inputs produce a valid output. Not much else. We can't see the boundaries of our input space that separate the valid inputs from the invalid ones. We can't identify what region of our input space is the most stable unless we manually explore it. We don't know if increasing the reservoir pressure between snapshots will move our region of valid inputs such that the next solution we settle on from our binary search is on the other side of the region - a point could exist within both regions, again, we'd have to manually explore to find it. We don't know if our valid region is convex or concave. It's definitely not a single point, given that there are tolerances on the end pressures. We don't know if there's only one region. We don't know if there's even one region.

All we can say is that a path exists at the checked intervals from A to B but we can't say how wide it is, whether it's continuous or how long it'll last.